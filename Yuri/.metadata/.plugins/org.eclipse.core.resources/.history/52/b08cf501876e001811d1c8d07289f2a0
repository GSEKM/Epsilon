
/*
 * 
 */
package iot.diagram.part;

/**
 * @generated
 */
public class IotPaletteFactory {

	/**
 * @generated
 */
	public void fillPalette(org.eclipse.gef.palette.PaletteRoot paletteRoot) {
		paletteRoot.add(createObjects1Group());
paletteRoot.add(createConnections2Group());
	}

	/**
 * Creates "Objects" palette tool group
 * @generated
 */
	private org.eclipse.gef.palette.PaletteContainer createObjects1Group() {
				org.eclipse.gef.palette.PaletteDrawer paletteContainer = new org.eclipse.gef.palette.PaletteDrawer(iot.diagram.part.Messages.Objects1Group_title);
				 paletteContainer.setId("createObjects1Group"); //$NON-NLS-1$
								paletteContainer.add(createArduino1CreationTool());
paletteContainer.add(createMotor2CreationTool());
		return paletteContainer;
	}
	/**
 * Creates "Connections" palette tool group
 * @generated
 */
	private org.eclipse.gef.palette.PaletteContainer createConnections2Group() {
				org.eclipse.gef.palette.PaletteDrawer paletteContainer = new org.eclipse.gef.palette.PaletteDrawer(iot.diagram.part.Messages.Connections2Group_title);
				 paletteContainer.setId("createConnections2Group"); //$NON-NLS-1$
								paletteContainer.add(createConector1CreationTool());
		return paletteContainer;
	}

	/**
 * @generated
 */
	private org.eclipse.gef.palette.ToolEntry createArduino1CreationTool() {
		NodeToolEntry entry = new NodeToolEntry(iot.diagram.part.Messages.Arduino1CreationTool_title, iot.diagram.part.Messages.Arduino1CreationTool_desc, java.util.Collections.singletonList(iot.diagram.providers.IotElementTypes.Arduino_2002));
				 entry.setId("createArduino1CreationTool"); //$NON-NLS-1$
		entry.setSmallIcon(iot.diagram.providers.IotElementTypes.getImageDescriptor(iot.diagram.providers.IotElementTypes.Arduino_2002));
		entry.setLargeIcon(entry.getSmallIcon());
						return entry;
	}
	/**
 * @generated
 */
	private org.eclipse.gef.palette.ToolEntry createMotor2CreationTool() {
		org.eclipse.gef.palette.ToolEntry entry = new org.eclipse.gef.palette.ToolEntry(iot.diagram.part.Messages.Motor2CreationTool_title, iot.diagram.part.Messages.Motor2CreationTool_desc, null, null) {};
				 entry.setId("createMotor2CreationTool"); //$NON-NLS-1$
										return entry;
	}
	/**
 * @generated
 */
	private org.eclipse.gef.palette.ToolEntry createConector1CreationTool() {
		LinkToolEntry entry = new LinkToolEntry(iot.diagram.part.Messages.Conector1CreationTool_title, iot.diagram.part.Messages.Conector1CreationTool_desc, java.util.Collections.singletonList(iot.diagram.providers.IotElementTypes.ArduinoConector_4004));
				 entry.setId("createConector1CreationTool"); //$NON-NLS-1$
		entry.setSmallIcon(iot.diagram.providers.IotElementTypes.getImageDescriptor(iot.diagram.providers.IotElementTypes.ArduinoConector_4004));
		entry.setLargeIcon(entry.getSmallIcon());
						return entry;
	}



	/**
 * @generated
 */
	private static class NodeToolEntry extends org.eclipse.gef.palette.ToolEntry {

		/**
 * @generated
 */
		private final java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> elementTypes;

		/**
 * @generated
 */
		private NodeToolEntry(String title, String description, java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> elementTypes) {
			super(title, description, null, null);
			this.elementTypes = elementTypes;
		}

		/**
 * @generated
 */
		public org.eclipse.gef.Tool createTool() {
			org.eclipse.gef.Tool tool = new org.eclipse.gmf.runtime.diagram.ui.tools.UnspecifiedTypeCreationTool(elementTypes);
			tool.setProperties(getToolProperties());
			return tool;
		}
	}

	/**
 * @generated
 */
	private static class LinkToolEntry extends org.eclipse.gef.palette.ToolEntry {

		/**
 * @generated
 */
		private final java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> relationshipTypes;

		/**
 * @generated
 */
		private LinkToolEntry(String title, String description, java.util.List<org.eclipse.gmf.runtime.emf.type.core.IElementType> relationshipTypes) {
			super(title, description, null, null);
			this.relationshipTypes = relationshipTypes;
		}

		/**
 * @generated
 */
		public org.eclipse.gef.Tool createTool() {
			org.eclipse.gef.Tool tool = new org.eclipse.gmf.runtime.diagram.ui.tools.UnspecifiedTypeConnectionTool(relationshipTypes);
			tool.setProperties(getToolProperties());
			return tool;
		}
	}
}
